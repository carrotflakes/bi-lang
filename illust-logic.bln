fn consListCarsCdrs(list2d) {
  if list2d = [] {
    [[], []]
  } else {
    (a : b) : c = list2d;
    [cars, cdrs] = consListCarsCdrs(c);
    [a : cars, b : cdrs]
  }
}

fn list2dTranspose(list2d) {
  if list2d[0] = [] {
    []
  } else {
    [row, list2d_] = consListCarsCdrs(list2d);
    row : list2dTranspose(list2d_)
  }
}

fn lineNumbers(line) {
  match line {
    [] => [],
    0:line_ => lineNumbers(line_),
    [1] => [1],
    1:0:line_ => 1:lineNumbers(line_),
    1:1:line_ => {
      n:numbers = lineNumbers(1:line_);
      (n + 1):numbers
    }
  }
}

fn illustLogic(field) {
  row = map('lineNumbers, field);
  column = map('lineNumbers, list2dTranspose(field));
  [row, column]
}


print1 illustLogic([
    [1, 0, 1],
    [0, 1, 1],
    [0, 1, 1],
])
